name: "Flujo CI-Build"
run-name: "Flujo CI - Build"
on:
  workflow_dispatch:
    inputs:
      cloud:
        description: "Proveedor Cloud"
        required: true
        default: "AWS"

jobs:
  docker-aws:
    if: github.event.inputs.cloud == 'AWS'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repositorio"
        uses: actions/checkout@v3
      - name: "Configurar QEMU"
        uses: docker/setup-qemu-action@v2
      - name: "Configurar Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "Configurar tag y etiquetas para ${{ github.ref }}"
        run: |
          if [ "$GITHUB_REF" == "refs/heads/master" ]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=snapshot" >> $GITHUB_ENV
          fi
          echo "VCS_REF=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
      - name: "Configurar credenciales de AWS"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: "Autenticar en AWS ECR"
        id: login-ecr-publico
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: "Compilar y Subir imagen de Docker"
        env:
          REGISTRY: ${{ steps.login-ecr-publico.outputs.registry }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ vars.AWS_REGISTRY_ALIAS }}/${{ vars.AWS_REPOSITORY }}:${{ env.DOCKER_TAG }}
          build-args: |
            VCS_REF=${{ env.VCS_REF }}
            BUILD_DATE=${{ env.BUILD_DATE }}

            