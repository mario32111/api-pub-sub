name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "DOCKER_COMPOSE_FILE=docker-compose.prod.yml" >> $GITHUB_ENV
          echo "DOCKERFILE=Dockerfile.prod" >> $GITHUB_ENV

      - name: Create .env file with secure permissions
        run: |
          # Crea el archivo .env con permisos temporales de lectura
          echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env
          chmod 644 .env  # Permisos temporales para la transferencia

      - name: Verify files and permissions
        run: |
          ls -lh ${{ env.DOCKER_COMPOSE_FILE }} mosquitto.conf .env
          [ -f "${{ env.DOCKER_COMPOSE_FILE }}" ] || { echo "ERROR: Archivo compose no encontrado"; exit 1; }
          [ -f ".env" ] || { echo "ERROR: Archivo .env no encontrado"; exit 1; }

      - name: Transfer files using rsync (more reliable)
        uses: burnett01/rsync-deployments@5.2.3
        with:
          switches: -avzr --delete
          path: |
            ${{ env.DOCKER_COMPOSE_FILE }}
            mosquitto.conf
            .env
          remote_path: /home/ubuntu/deploy_temp/
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: Secure deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 1. Prepare target directory
            sudo mkdir -p /opt/hydro-api-v2
            sudo chown -R ubuntu:ubuntu /opt/hydro-api-v2
            sudo chmod 755 /opt/hydro-api-v2

            # 2. Move files securely
            sudo mv /home/ubuntu/deploy_temp/* /opt/hydro-api-v2/
            sudo chmod 600 /opt/hydro-api-v2/.env  # Restrict .env permissions

            # 3. Docker deployment
            cd /opt/hydro-api-v2
            docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} down || true
            docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} build --no-cache
            docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d --force-recreate

            # 4. Cleanup and verification
            rm -rf /home/ubuntu/deploy_temp
            docker ps -a | grep hydro-api
            docker logs hydro-api  # Verifica logs iniciales
